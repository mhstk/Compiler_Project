
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCOMMArightASSIGNleftCOLONSEMICOLONleftORleftANDleftEQNEleftGTGELTLEleftSUMSUBleftMULDIVMODrightNOTAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : declist MAIN LRB RRB blockdeclist : declist dec\n                | dec : vardec \n               | funcdectype : INTEGER\n                | FLOAT\n                | BOOLEANiddec : ID\n                 | ID LSB exp RSB\n                 | ID ASSIGN expidlist : iddec \n                  | idlist COMMA iddecvardec : idlist COLON type SEMICOLONfuncdec : FUNCTION ID LRB paramdecs RRB COLON type block \n                   | FUNCTION ID LRB paramdecs RRB blockparamdecs : paramdecslist\n                     | paramdecslist : paramdec\n                         | paramdecslist COMMA paramdecparamdec : ID COLON type \n                    | ID LSB RSB COLON typeblock : LCB stmtlist RCBstmtlist : stmtlist stmt\n                    | case : WHERE const COLON stmtlistcases : cases case\n                 | stmt : RETURN exp SEMICOLON \n                | exp SEMICOLON\n                | block\n                | vardec\n                | WHILE LRB exp RRB stmt\n                | ON LRB exp RRB LCB cases RCB SEMICOLON\n                | FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt \n                | FOR LRB ID IN ID RRB stmt\n                | IF LRB exp RRB stmt elseiflist  \n                | IF LRB exp RRB stmt elseiflist ELSE stmt\n                | PRINT LRB ID RRB SEMICOLONelseiflist : elseiflist ELSEIF LRB exp RRB stmt\n                      | relop : GT \n                 | LT\n                 | NE\n                 | EQ\n                 | LE\n                 | GErelopexp : exp relop exp \n                    | relopexp relop expexp : ID ASSIGN exp \n               | ID LSB exp RSB ASSIGN exp \n               | exp AND exp\n               | exp OR exp\n               | exp SUM exp\n               | exp SUB exp\n               | exp DIV exp\n               | exp MUL exp\n               | exp MOD exp\n               | relopexp\n               | const\n               | ID LSB exp RSB \n               | ID  \n               | ID LRB explist RRB \n               | LRB exp RRB\n               | ID LRB RRB \n               | SUB exp \n               | NOT expconst : INTEGERNUMBER \n                 | FLOATNUMBER\n                 | TRUE\n                 | FALSEexplist : exp \n                   | explist COMMA exp'
    
_lr_action_items = {'MAIN':([0,2,4,5,6,38,85,100,128,],[-3,3,-2,-4,-5,-14,-23,-16,-15,]),'FUNCTION':([0,2,4,5,6,38,85,100,128,],[-3,8,-2,-4,-5,-14,-23,-16,-15,]),'ID':([0,2,4,5,6,8,13,15,16,23,26,29,30,37,38,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,69,85,86,87,89,90,100,104,106,107,108,109,110,111,112,113,116,118,128,130,132,133,135,137,141,142,144,145,146,151,152,154,156,157,158,159,160,162,163,164,],[-3,9,-2,-4,-5,14,9,24,24,39,24,24,24,-25,-14,24,24,24,24,24,24,24,24,24,24,24,-42,-43,-44,-45,-46,-47,24,94,39,-23,-24,24,-31,-32,-16,24,-30,24,24,122,24,24,24,126,24,-29,-15,94,24,140,94,-33,-41,-39,24,94,-37,-36,94,-34,94,-38,24,-25,-35,94,94,-40,]),'$end':([1,36,85,],[0,-1,-23,]),'LRB':([3,14,15,16,24,26,29,30,37,38,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,85,86,87,89,90,91,92,93,94,95,96,104,106,107,108,109,110,111,112,116,118,122,130,132,135,137,141,142,144,145,146,151,152,153,154,156,157,158,159,160,162,163,164,],[11,23,29,29,45,29,29,29,-25,-14,29,29,29,29,29,29,29,29,29,29,29,-42,-43,-44,-45,-46,-47,29,29,-23,-24,29,-31,-32,107,108,109,45,112,113,29,-30,29,29,29,29,29,29,29,-29,45,29,29,29,-33,-41,-39,29,29,-37,-36,29,158,-34,29,-38,29,-25,-35,29,29,-40,]),'COLON':([7,9,10,22,24,27,28,31,32,33,34,35,39,46,61,64,68,70,73,75,76,77,78,79,80,81,82,83,84,94,98,102,103,123,129,134,155,],[12,-9,-12,-13,-62,-59,-60,-68,-69,-70,-71,-11,66,-10,-66,-67,99,-50,-65,-52,-53,-54,-55,-56,-57,-58,-48,-49,-64,-9,114,-61,-63,-11,-51,-10,159,]),'COMMA':([7,9,10,19,20,21,22,24,27,28,31,32,33,34,35,41,42,46,61,64,70,72,73,74,75,76,77,78,79,80,81,82,83,84,94,97,101,102,103,117,123,127,129,134,],[13,-9,-12,-6,-7,-8,-13,-62,-59,-60,-68,-69,-70,-71,-11,69,-19,-10,-66,-67,-50,104,-65,-72,-52,-53,-54,-55,-56,-57,-58,-48,-49,-64,-9,-21,-20,-61,-63,-73,-11,-22,-51,-10,]),'LSB':([9,24,39,94,122,],[15,44,67,111,44,]),'ASSIGN':([9,24,94,102,122,134,],[16,43,110,116,43,116,]),'RRB':([11,19,20,21,23,24,27,28,31,32,33,34,40,41,42,45,61,63,64,70,72,73,74,75,76,77,78,79,80,81,82,83,84,97,101,102,103,117,119,120,125,126,127,129,140,150,161,],[17,-6,-7,-8,-18,-62,-59,-60,-68,-69,-70,-71,68,-17,-19,73,-66,84,-67,-50,103,-65,-72,-52,-53,-54,-55,-56,-57,-58,-48,-49,-64,-21,-20,-61,-63,-73,130,131,135,136,-22,-51,145,156,163,]),'INTEGER':([12,66,99,114,],[19,19,19,19,]),'FLOAT':([12,66,99,114,],[20,20,20,20,]),'BOOLEAN':([12,66,99,114,],[21,21,21,21,]),'SUB':([15,16,24,25,26,27,28,29,30,31,32,33,34,35,37,38,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119,120,121,122,123,124,125,129,130,132,134,135,137,139,141,142,144,145,146,150,151,152,154,156,157,158,159,160,161,162,163,164,],[26,26,-62,50,26,-59,-60,26,26,-68,-69,-70,-71,50,-25,-14,26,26,26,26,26,26,26,26,26,26,26,-42,-43,-44,-45,-46,-47,-66,26,50,-67,26,50,50,-65,50,50,50,-54,-55,-56,-57,-58,50,50,-64,-23,-24,26,50,-31,-32,-62,-61,-63,26,50,-30,26,26,26,26,26,26,26,50,-29,50,50,50,-62,50,50,50,50,26,26,-61,26,-33,50,-41,-39,26,26,-37,50,-36,26,-34,26,-38,26,-25,-35,50,26,26,-40,]),'NOT':([15,16,26,29,30,37,38,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,85,86,87,89,90,104,106,107,108,109,110,111,112,116,118,130,132,135,137,141,142,144,145,146,151,152,154,156,157,158,159,160,162,163,164,],[30,30,30,30,30,-25,-14,30,30,30,30,30,30,30,30,30,30,30,-42,-43,-44,-45,-46,-47,30,30,-23,-24,30,-31,-32,30,-30,30,30,30,30,30,30,30,-29,30,30,30,-33,-41,-39,30,30,-37,-36,30,-34,30,-38,30,-25,-35,30,30,-40,]),'INTEGERNUMBER':([15,16,26,29,30,37,38,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,85,86,87,89,90,104,106,107,108,109,110,111,112,116,118,130,132,135,137,141,142,144,145,146,149,151,152,154,156,157,158,159,160,162,163,164,],[31,31,31,31,31,-25,-14,31,31,31,31,31,31,31,31,31,31,31,-42,-43,-44,-45,-46,-47,31,31,-23,-24,31,-31,-32,31,-30,31,31,31,31,31,31,31,-29,31,31,31,-33,-41,-39,31,31,-37,31,-36,31,-34,31,-38,31,-25,-35,31,31,-40,]),'FLOATNUMBER':([15,16,26,29,30,37,38,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,85,86,87,89,90,104,106,107,108,109,110,111,112,116,118,130,132,135,137,141,142,144,145,146,149,151,152,154,156,157,158,159,160,162,163,164,],[32,32,32,32,32,-25,-14,32,32,32,32,32,32,32,32,32,32,32,-42,-43,-44,-45,-46,-47,32,32,-23,-24,32,-31,-32,32,-30,32,32,32,32,32,32,32,-29,32,32,32,-33,-41,-39,32,32,-37,32,-36,32,-34,32,-38,32,-25,-35,32,32,-40,]),'TRUE':([15,16,26,29,30,37,38,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,85,86,87,89,90,104,106,107,108,109,110,111,112,116,118,130,132,135,137,141,142,144,145,146,149,151,152,154,156,157,158,159,160,162,163,164,],[33,33,33,33,33,-25,-14,33,33,33,33,33,33,33,33,33,33,33,-42,-43,-44,-45,-46,-47,33,33,-23,-24,33,-31,-32,33,-30,33,33,33,33,33,33,33,-29,33,33,33,-33,-41,-39,33,33,-37,33,-36,33,-34,33,-38,33,-25,-35,33,33,-40,]),'FALSE':([15,16,26,29,30,37,38,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,65,85,86,87,89,90,104,106,107,108,109,110,111,112,116,118,130,132,135,137,141,142,144,145,146,149,151,152,154,156,157,158,159,160,162,163,164,],[34,34,34,34,34,-25,-14,34,34,34,34,34,34,34,34,34,34,34,-42,-43,-44,-45,-46,-47,34,34,-23,-24,34,-31,-32,34,-30,34,34,34,34,34,34,34,-29,34,34,34,-33,-41,-39,34,34,-37,34,-36,34,-34,34,-38,34,-25,-35,34,34,-40,]),'LCB':([17,19,20,21,37,38,65,68,85,86,89,90,106,115,118,130,131,135,137,141,142,145,146,151,152,154,156,157,159,160,162,163,164,],[37,-6,-7,-8,-25,-14,37,37,-23,-24,-31,-32,-30,37,-29,37,138,37,-33,-41,-39,37,-37,-36,37,-34,37,-38,-25,-35,37,37,-40,]),'SEMICOLON':([18,19,20,21,24,27,28,31,32,33,34,61,64,70,73,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,121,122,123,129,134,136,139,147,],[38,-6,-7,-8,-62,-59,-60,-68,-69,-70,-71,-66,-67,-50,-65,-52,-53,-54,-55,-56,-57,-58,-48,-49,-64,106,-62,-61,-63,118,132,-62,-50,-51,-61,142,144,154,]),'RSB':([24,25,27,28,31,32,33,34,61,64,67,70,71,73,75,76,77,78,79,80,81,82,83,84,102,103,124,129,],[-62,46,-59,-60,-68,-69,-70,-71,-66,-67,98,-50,102,-65,-52,-53,-54,-55,-56,-57,-58,-48,-49,-64,-61,-63,134,-51,]),'AND':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,47,-59,-60,-68,-69,-70,-71,47,-66,47,-67,47,47,-65,47,-52,47,-54,-55,-56,-57,-58,47,47,-64,47,-62,-61,-63,47,47,47,47,47,-62,47,47,47,47,-61,47,47,47,]),'OR':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,48,-59,-60,-68,-69,-70,-71,48,-66,48,-67,48,48,-65,48,-52,-53,-54,-55,-56,-57,-58,48,48,-64,48,-62,-61,-63,48,48,48,48,48,-62,48,48,48,48,-61,48,48,48,]),'SUM':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,49,-59,-60,-68,-69,-70,-71,49,-66,49,-67,49,49,-65,49,49,49,-54,-55,-56,-57,-58,49,49,-64,49,-62,-61,-63,49,49,49,49,49,-62,49,49,49,49,-61,49,49,49,]),'DIV':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,51,-59,-60,-68,-69,-70,-71,51,51,51,-67,51,51,-65,51,51,51,51,51,-56,-57,-58,51,51,-64,51,-62,-61,-63,51,51,51,51,51,-62,51,51,51,51,-61,51,51,51,]),'MUL':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,52,-59,-60,-68,-69,-70,-71,52,52,52,-67,52,52,-65,52,52,52,52,52,-56,-57,-58,52,52,-64,52,-62,-61,-63,52,52,52,52,52,-62,52,52,52,52,-61,52,52,52,]),'MOD':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,53,-59,-60,-68,-69,-70,-71,53,53,53,-67,53,53,-65,53,53,53,53,53,-56,-57,-58,53,53,-64,53,-62,-61,-63,53,53,53,53,53,-62,53,53,53,53,-61,53,53,53,]),'GT':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,55,55,-60,-68,-69,-70,-71,55,-66,55,-67,55,55,-65,55,55,55,-54,-55,-56,-57,-58,55,55,-64,55,-62,-61,-63,55,55,55,55,55,-62,55,55,55,55,-61,55,55,55,]),'LT':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,56,56,-60,-68,-69,-70,-71,56,-66,56,-67,56,56,-65,56,56,56,-54,-55,-56,-57,-58,56,56,-64,56,-62,-61,-63,56,56,56,56,56,-62,56,56,56,56,-61,56,56,56,]),'NE':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,57,57,-60,-68,-69,-70,-71,57,-66,57,-67,57,57,-65,57,57,57,-54,-55,-56,-57,-58,57,57,-64,57,-62,-61,-63,57,57,57,57,57,-62,57,57,57,57,-61,57,57,57,]),'EQ':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,58,58,-60,-68,-69,-70,-71,58,-66,58,-67,58,58,-65,58,58,58,-54,-55,-56,-57,-58,58,58,-64,58,-62,-61,-63,58,58,58,58,58,-62,58,58,58,58,-61,58,58,58,]),'LE':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,59,59,-60,-68,-69,-70,-71,59,-66,59,-67,59,59,-65,59,59,59,-54,-55,-56,-57,-58,59,59,-64,59,-62,-61,-63,59,59,59,59,59,-62,59,59,59,59,-61,59,59,59,]),'GE':([24,25,27,28,31,32,33,34,35,61,63,64,70,71,73,74,75,76,77,78,79,80,81,82,83,84,88,94,102,103,105,117,119,120,121,122,123,124,125,129,134,139,150,161,],[-62,60,60,-60,-68,-69,-70,-71,60,-66,60,-67,60,60,-65,60,60,60,-54,-55,-56,-57,-58,60,60,-64,60,-62,-61,-63,60,60,60,60,60,-62,60,60,60,60,-61,60,60,60,]),'RCB':([37,38,65,85,86,89,90,106,118,137,138,141,142,143,146,148,151,154,157,159,160,162,164,],[-25,-14,85,-23,-24,-31,-32,-30,-29,-33,-28,-41,-39,147,-37,-27,-36,-34,-38,-25,-35,-26,-40,]),'RETURN':([37,38,65,85,86,89,90,106,118,130,135,137,141,142,145,146,151,152,154,156,157,159,160,162,163,164,],[-25,-14,87,-23,-24,-31,-32,-30,-29,87,87,-33,-41,-39,87,-37,-36,87,-34,87,-38,-25,-35,87,87,-40,]),'WHILE':([37,38,65,85,86,89,90,106,118,130,135,137,141,142,145,146,151,152,154,156,157,159,160,162,163,164,],[-25,-14,91,-23,-24,-31,-32,-30,-29,91,91,-33,-41,-39,91,-37,-36,91,-34,91,-38,-25,-35,91,91,-40,]),'ON':([37,38,65,85,86,89,90,106,118,130,135,137,141,142,145,146,151,152,154,156,157,159,160,162,163,164,],[-25,-14,92,-23,-24,-31,-32,-30,-29,92,92,-33,-41,-39,92,-37,-36,92,-34,92,-38,-25,-35,92,92,-40,]),'FOR':([37,38,65,85,86,89,90,106,118,130,135,137,141,142,145,146,151,152,154,156,157,159,160,162,163,164,],[-25,-14,93,-23,-24,-31,-32,-30,-29,93,93,-33,-41,-39,93,-37,-36,93,-34,93,-38,-25,-35,93,93,-40,]),'IF':([37,38,65,85,86,89,90,106,118,130,135,137,141,142,145,146,151,152,154,156,157,159,160,162,163,164,],[-25,-14,95,-23,-24,-31,-32,-30,-29,95,95,-33,-41,-39,95,-37,-36,95,-34,95,-38,-25,-35,95,95,-40,]),'PRINT':([37,38,65,85,86,89,90,106,118,130,135,137,141,142,145,146,151,152,154,156,157,159,160,162,163,164,],[-25,-14,96,-23,-24,-31,-32,-30,-29,96,96,-33,-41,-39,96,-37,-36,96,-34,96,-38,-25,-35,96,96,-40,]),'ELSE':([38,85,89,90,106,118,137,141,142,146,151,154,157,160,164,],[-14,-23,-31,-32,-30,-29,-33,-41,-39,152,-36,-34,-38,-35,-40,]),'ELSEIF':([38,85,89,90,106,118,137,141,142,146,151,154,157,160,164,],[-14,-23,-31,-32,-30,-29,-33,-41,-39,153,-36,-34,-38,-35,-40,]),'WHERE':([38,85,86,89,90,106,118,137,138,141,142,143,146,148,151,154,157,159,160,162,164,],[-14,-23,-24,-31,-32,-30,-29,-33,-28,-41,-39,149,-37,-27,-36,-34,-38,-25,-35,-26,-40,]),'IN':([122,],[133,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'dec':([2,],[4,]),'vardec':([2,65,130,135,145,152,156,162,163,],[5,90,90,90,90,90,90,90,90,]),'funcdec':([2,],[6,]),'idlist':([2,65,130,135,145,152,156,162,163,],[7,7,7,7,7,7,7,7,7,]),'iddec':([2,13,65,130,135,145,152,156,162,163,],[10,22,10,10,10,10,10,10,10,10,]),'type':([12,66,99,114,],[18,97,115,127,]),'exp':([15,16,26,29,30,43,44,45,47,48,49,50,51,52,53,54,62,65,87,104,107,108,109,110,111,112,116,130,132,135,144,145,152,156,158,162,163,],[25,35,61,63,64,70,71,74,75,76,77,78,79,80,81,82,83,88,105,117,119,120,121,123,124,125,129,88,139,88,150,88,88,88,161,88,88,]),'relopexp':([15,16,26,29,30,43,44,45,47,48,49,50,51,52,53,54,62,65,87,104,107,108,109,110,111,112,116,130,132,135,144,145,152,156,158,162,163,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'const':([15,16,26,29,30,43,44,45,47,48,49,50,51,52,53,54,62,65,87,104,107,108,109,110,111,112,116,130,132,135,144,145,149,152,156,158,162,163,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,155,28,28,28,28,28,]),'block':([17,65,68,115,130,135,145,152,156,162,163,],[36,89,100,128,89,89,89,89,89,89,89,]),'paramdecs':([23,],[40,]),'paramdecslist':([23,],[41,]),'paramdec':([23,69,],[42,101,]),'relop':([25,27,35,61,63,64,70,71,74,75,76,77,78,79,80,81,82,83,88,105,117,119,120,121,123,124,125,129,139,150,161,],[54,62,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'stmtlist':([37,159,],[65,162,]),'explist':([45,],[72,]),'stmt':([65,130,135,145,152,156,162,163,],[86,137,141,151,157,160,86,164,]),'cases':([138,],[143,]),'elseiflist':([141,],[146,]),'case':([143,],[148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program','par.py',25),
  ('declist -> declist dec','declist',2,'p_declist','par.py',29),
  ('declist -> <empty>','declist',0,'p_declist','par.py',30),
  ('dec -> vardec','dec',1,'p_dec','par.py',39),
  ('dec -> funcdec','dec',1,'p_dec','par.py',40),
  ('type -> INTEGER','type',1,'p_type','par.py',44),
  ('type -> FLOAT','type',1,'p_type','par.py',45),
  ('type -> BOOLEAN','type',1,'p_type','par.py',46),
  ('iddec -> ID','iddec',1,'p_iddec','par.py',50),
  ('iddec -> ID LSB exp RSB','iddec',4,'p_iddec','par.py',51),
  ('iddec -> ID ASSIGN exp','iddec',3,'p_iddec','par.py',52),
  ('idlist -> iddec','idlist',1,'p_idlist','par.py',62),
  ('idlist -> idlist COMMA iddec','idlist',3,'p_idlist','par.py',63),
  ('vardec -> idlist COLON type SEMICOLON','vardec',4,'p_vardec','par.py',70),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB COLON type block','funcdec',8,'p_funcdec','par.py',74),
  ('funcdec -> FUNCTION ID LRB paramdecs RRB block','funcdec',6,'p_funcdec','par.py',75),
  ('paramdecs -> paramdecslist','paramdecs',1,'p_paramdecs','par.py',82),
  ('paramdecs -> <empty>','paramdecs',0,'p_paramdecs','par.py',83),
  ('paramdecslist -> paramdec','paramdecslist',1,'p_paramdecslist','par.py',90),
  ('paramdecslist -> paramdecslist COMMA paramdec','paramdecslist',3,'p_paramdecslist','par.py',91),
  ('paramdec -> ID COLON type','paramdec',3,'p_paramdec','par.py',98),
  ('paramdec -> ID LSB RSB COLON type','paramdec',5,'p_paramdec','par.py',99),
  ('block -> LCB stmtlist RCB','block',3,'p_block','par.py',106),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist','par.py',110),
  ('stmtlist -> <empty>','stmtlist',0,'p_stmtlist','par.py',111),
  ('case -> WHERE const COLON stmtlist','case',4,'p_case','par.py',121),
  ('cases -> cases case','cases',2,'p_cases','par.py',125),
  ('cases -> <empty>','cases',0,'p_cases','par.py',126),
  ('stmt -> RETURN exp SEMICOLON','stmt',3,'p_stmt','par.py',135),
  ('stmt -> exp SEMICOLON','stmt',2,'p_stmt','par.py',136),
  ('stmt -> block','stmt',1,'p_stmt','par.py',137),
  ('stmt -> vardec','stmt',1,'p_stmt','par.py',138),
  ('stmt -> WHILE LRB exp RRB stmt','stmt',5,'p_stmt','par.py',139),
  ('stmt -> ON LRB exp RRB LCB cases RCB SEMICOLON','stmt',8,'p_stmt','par.py',140),
  ('stmt -> FOR LRB exp SEMICOLON exp SEMICOLON exp RRB stmt','stmt',9,'p_stmt','par.py',141),
  ('stmt -> FOR LRB ID IN ID RRB stmt','stmt',7,'p_stmt','par.py',142),
  ('stmt -> IF LRB exp RRB stmt elseiflist','stmt',6,'p_stmt','par.py',143),
  ('stmt -> IF LRB exp RRB stmt elseiflist ELSE stmt','stmt',8,'p_stmt','par.py',144),
  ('stmt -> PRINT LRB ID RRB SEMICOLON','stmt',5,'p_stmt','par.py',145),
  ('elseiflist -> elseiflist ELSEIF LRB exp RRB stmt','elseiflist',6,'p_elseiflist','par.py',149),
  ('elseiflist -> <empty>','elseiflist',0,'p_elseiflist','par.py',150),
  ('relop -> GT','relop',1,'p_relop','par.py',159),
  ('relop -> LT','relop',1,'p_relop','par.py',160),
  ('relop -> NE','relop',1,'p_relop','par.py',161),
  ('relop -> EQ','relop',1,'p_relop','par.py',162),
  ('relop -> LE','relop',1,'p_relop','par.py',163),
  ('relop -> GE','relop',1,'p_relop','par.py',164),
  ('relopexp -> exp relop exp','relopexp',3,'p_relopexp','par.py',168),
  ('relopexp -> relopexp relop exp','relopexp',3,'p_relopexp','par.py',169),
  ('exp -> ID ASSIGN exp','exp',3,'p_exp','par.py',176),
  ('exp -> ID LSB exp RSB ASSIGN exp','exp',6,'p_exp','par.py',177),
  ('exp -> exp AND exp','exp',3,'p_exp','par.py',178),
  ('exp -> exp OR exp','exp',3,'p_exp','par.py',179),
  ('exp -> exp SUM exp','exp',3,'p_exp','par.py',180),
  ('exp -> exp SUB exp','exp',3,'p_exp','par.py',181),
  ('exp -> exp DIV exp','exp',3,'p_exp','par.py',182),
  ('exp -> exp MUL exp','exp',3,'p_exp','par.py',183),
  ('exp -> exp MOD exp','exp',3,'p_exp','par.py',184),
  ('exp -> relopexp','exp',1,'p_exp','par.py',185),
  ('exp -> const','exp',1,'p_exp','par.py',186),
  ('exp -> ID LSB exp RSB','exp',4,'p_exp','par.py',187),
  ('exp -> ID','exp',1,'p_exp','par.py',188),
  ('exp -> ID LRB explist RRB','exp',4,'p_exp','par.py',189),
  ('exp -> LRB exp RRB','exp',3,'p_exp','par.py',190),
  ('exp -> ID LRB RRB','exp',3,'p_exp','par.py',191),
  ('exp -> SUB exp','exp',2,'p_exp','par.py',192),
  ('exp -> NOT exp','exp',2,'p_exp','par.py',193),
  ('const -> INTEGERNUMBER','const',1,'p_const','par.py',198),
  ('const -> FLOATNUMBER','const',1,'p_const','par.py',199),
  ('const -> TRUE','const',1,'p_const','par.py',200),
  ('const -> FALSE','const',1,'p_const','par.py',201),
  ('explist -> exp','explist',1,'p_explist','par.py',207),
  ('explist -> explist COMMA exp','explist',3,'p_explist','par.py',208),
]
